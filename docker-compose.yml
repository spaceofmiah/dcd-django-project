version: '3.9'

services:

  # the service for our django project
  project:
   
    # will be built using an image which resides in context
    build: 
      # same as this docker-compose.yml ( .  :: references the Dockerfile )
      context: .
    
    command: >
      sh -c "python manage.py wait_for_db && 
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    
    # Connect project container port to the host port. This connection is only possible
    # because the port of the image from which this container is built has it's port 8000 
    # exposed in Dockerfile
    ports:
      - 8000:8000
    
    # ./src:/project
    # As we add or update our project on the host machine (within src/ folder), propagate 
    # the change on the container as well ( within project folder ).
    # Host Project Folder       :::: ./src
    # Container Project Folder  :::: /project

    # ./data/web:/vol/web
    # Maps the directory created for serving static & media file from host 
    # machine to the container. The directory is created in Dockerfile.
    volumes:
      - ./src:/project
      - ./data/web:/vol/web
    
    environment:
      - DEBUG=1
      - DB_HOST=db          # This is the name of the service that's powering the database
      - DB_NAME=dev
      - DB_USER=devuser
      - DB_PASS=changeme
      - SECRET_KEY=dev-sekret-key
    
    depends_on:
      - db                  # This is the name of the service that's powering the database

  # the service for our postgres database 
  db:
    # Builds a postgres database from a postgres image on docker hub
    image: postgres:12.2-alpine

    # Setup postgres database initialization command to use these
    # environment variable.
    environment:
      - POSTGRES_DB=dev
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=changeme
